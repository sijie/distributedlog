/**
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
syntax = "proto3";

package distributedlog.proto.statestore;

option java_multiple_files = true;
option java_package = "org.apache.distributedlog.statestore.proto";

// KeyRecord holds mvcc metadata for a given key
message KeyMeta {

    // create_revision is the revision of the last creation on the key
    int64 create_revision       = 1;
    // mod_revision is the revision of the last modification on the key
    int64 mod_revision          = 2;
    // version is the version of the most recent value
    int64 version               = 3;

}

// ChangeEvent captures the changes happen to a state store
message ChangeEventMeta {

    enum EventType {
        PUT     = 0;
        DELETE  = 1;
    }

    // type is the kind of the event. If type is a PUT, it indicates
    // new data has been stored to the key. If type is a DELETE, it
    // indicates the key was deleted.
    EventType type              = 1;

    // kv holds the KeyValue for the event.
    // A PUT event contains current kv pair.
    // A PUT event with kv.Version=1 indicates the creation of a key.
    // A DELETE/EXPIRE event contains the deleted key with
    // its modification revision set to the revision of deletion.
    KeyMeta kv                  = 2;

}
